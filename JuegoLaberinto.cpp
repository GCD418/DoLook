#include <bits/stdc++.h>

#define ffor(i, o, n) for(int i = o; i < n; i ++)

using namespace std;

int nx, ny, tx = 12, ty = 23, c, movements = 0;
map < char, pair < int, int > > mov;

char s;
pair < int, int > pos = {1, 0};
char mat [12][23] = {{'#', '#', '*', '*', '*', '*', '*', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
    {'-', '*', '*', '#', '#', '#', '*', '*', '*', '#', '*', '*', '*', '#', '*', '*', '*', '#', '#', '#', '#', '#', '#'},
    {'#', '#', '*', '*', '*', '*', '*', '#', '*', '*', '*', '#', '*', '*', '*', '#', '*', '#', '#', '#', '#', '#', '#'},
    {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '*', '*', '*', '#', '*', '*', '+', '#', '#', '#', '#'},
    {'*', '*', '*', '#', '*', '*', '*', '*', '*', '*', '*', '*', '#', '#', '*', '#', '*', '#', '*', '#', '#', '#', '#'},
    {'*', '#', '*', '#', '*', '#', '#', '*', '*', '#', '#', '*', '*', '*', '*', '#', '*', '*', '*', '*', '*', '*', '#'},
    {'*', '*', '*', '*', '*', '#', '*', '*', '*', '#', '#', '*', '#', '#', '#', '#', '#', '#', '*', '#', '#', '*', '#'},
    {'#', '*', '#', '#', '*', '*', '*', '#', '*', '*', '*', '*', '#', '#', '*', '*', '*', '*', '*', '*', '*', '*', '#'},
    {'#', '*', '#', '#', '*', '#', '*', '#', '#', '*', '#', '#', '#', '#', '*', '#', '#', '#', '*', '#', '#', '#', '#'},
    {'#', '*', '*', '*', '*', '#', '*', '*', '*', '*', '#', '#', '#', '#', '*', '*', '*', '*', '*', '#', '#', '#', '#'},
    {'#', '*', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '*', '#', '#', '#', '#'},
    {'#', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '/', '#', '#', '#', '#'}
};
pair<int, int> nm[13]= {{3, 18}, {4, 18}, {5, 18}, {6, 18}, {7, 18}, {8, 18}, {9, 18}, {8, 18}, {7, 18}, {6, 18}, {5, 18}, {4, 18}, {3, 18}};

void print() {
    ffor(i, 0, 12) {
            ffor(j, 0, 23) {
                cout << mat[i][j];
            }
            cout << endl;
        }
}

int main() {
    //cout << char(178) << endl;
    mov['d'] = {0, 1};
    mov['w'] = {-1, 0};
    mov['a'] = {0, -1};
    mov['s'] = {1, 0};
    c=0;
    while(1) {
        print();
        cin >> s;
        movements ++;
        nx = pos.first + mov[s].first;
        ny = pos.second + mov[s].second;
        mat[nm[c].first][nm[c].second] = '*' ;
        c=(c+1)%13;
        mat[nm[c].first][nm[c].second] = '+' ;
        if( nx >= 0 && nx < tx && ny >= 0 && ny < ty ) {
            if(mat[nx][ny] == '+') {
                mat[pos.first][pos.second] = '*';
                mat[nx][ny] = '@';
                system("cls");
                print();
                cout << "ESTAS MUERTO\n";
                return 0;
            }
            else if(mat[nx][ny] == '/') {
                mat[pos.first][pos.second] = '*';
                mat[nx][ny] = '$';
                system("cls");
                print();
                cout << "GANASTEEEEEEE" << endl;
                return 0;
            }
            else if( mat[nx][ny] == '*' ) {
                mat[pos.first][pos.second] = '*';
                mat[nx][ny] = '-';
                pos = {nx, ny};
            }
        }
        else{
            if(mat[pos.first][pos.second] == '+') {
                cout << "ESTAS MUERTO\n";
                return 0;
            }
        }
        system("cls");

    }
    return 0;
}
